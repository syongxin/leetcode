class Solution {
    public int maxLen, start;
    public String longestPalindrome(String s) {
        if(s == null || s.length() < 2) {
            return s;
        }

        for(int i=0; i<s.length(); i++) {
            // odd length, current char is the middle
            isPalindrome(s, i, i);
            // even length, current char is on left part
            isPalindrome(s, i, i+1);
        }

        return s.substring(start, start + maxLen);

    }

    public void isPalindrome(String s, int left, int right) {
        while (left >=0 && right < s.length()) {
            if(s.charAt(left) == s.charAt(right)) {
                left--;
                right++;
            } else {
                break;
            }
        }

        if (maxLen < right - left - 1) {
            maxLen = right - left - 1;
            start = left + 1;
        }
    }
}